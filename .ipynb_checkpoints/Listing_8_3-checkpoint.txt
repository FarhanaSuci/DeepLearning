# MLP for Pima Indians Dataset with 10-fold cross validation
from pandas import read_csv
from keras.models import Sequential
from keras.layers import Dense
from sklearn.model_selection import StratifiedKFold
import numpy as np

#load pima indians dataset
filename = 'D:\\Dataset\pima-indians-diabetes.csv'
names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']
dataframe = read_csv(filename, names=names)
array = dataframe.values
X = array[:,0:8]
Y = array[:,8]

# define 10-fold cross validation test harness
kfold = StratifiedKFold(n_splits=10, shuffle=True)
cvscores = []

for train, test in kfold.split(X, Y):
    # create model
    model = Sequential()
    model.add(Dense(12, input_dim=8, activation= 'relu'))
    model.add(Dense(8,activation= 'relu'))
    model.add(Dense(1, activation= 'sigmoid'))
    # Compile model
    model.compile(loss= 'binary_crossentropy', optimizer= 'adam' , metrics=['accuracy'])
    # Fit the model
    model.fit(X[train], Y[train], epochs=150, batch_size=10, verbose=0)#  verbose 0, 1 or 2 show the output of the training process for eeach epoch.
    # evaluate the model
    scores = model.evaluate(X[test], Y[test], verbose=0)
    print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))
    cvscores.append(scores[1] * 100)
print("%.2f%% (%.2f%%)" % (np.mean(cvscores), np.std(cvscores)))

